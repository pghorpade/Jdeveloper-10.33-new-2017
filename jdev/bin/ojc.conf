##############################################################################
#
# Oracle JDeveloper 10g Ojc Configuration File
# Copyright 2005 Oracle Corporation.
# All Rights Reserved.
#
##############################################################################
#
# The format of this file is:
#
#    "Directive      Value" (with one or more spaces and/or tab characters
#    between the directive and the value)  This file can be in either UNIX
#    or DOS format for end of line terminators.  Any path seperators must be
#    UNIX style forward slashes '/', even on Windows.
#

AddJavaLibFile ../lib/ojc.jar

#
# Directive SetJavaHome is not required by default, except for the base
# install, since the launcher will determine the JAVA_HOME.  On Windows
# it looks in ..\..\jdk, on UNIX it looks in the PATH by default.
#
# SetJavaHome c:\jdk1.4.2_03

#
# The Windows launcher will attempt to use client (hotspot) by default,
# unless a VM is specified below with the following directive.  On UNIX
# we use whatever is listed first in the $(JAVA_HOME)/jre/lib/jvm.cfg file.
#
# SetJavaVM ojvm

#
# Turn off verifications since the included classes are already verified by the 
# compiler.  This will reduce startup time significantly.  On some Linux 
# Systems, using -Xverify:none will cause a SIGABRT, if you get this, try 
# removing this option.
#
AddVMOption     -Xverify:none

#
# Set the maximum heap to 512M
#
AddVMOption     -Xmx512M

#
# MaxPermSize is required to run JDeveloper with Sun Microsystems virtual
# machine (-client and -server).  The default value is 64M, which isn't enough
# to run JDeveloper successfully.  With the default value, JDeveloper will
# end up running out of memory at some point in time.   This option is ignored
# by OJVM (-ojvm).
# This option is documented at:
# http://java.sun.com/docs/hotspot/gc1.4.2/faq.html 
#
AddVMOption    -XX:MaxPermSize=128M

#
# Option used by OJVM client on Windows, This option will turn on line numbers
# in the stack traces by disabling the optimizing compiler.
#
# AddVMOption     -XOd

#
# Enabling this option will cause OJVM client on Windows to only use 1 CPU on 
# a multi-processor system, on single-cpu systems, this option has no effect.
#
# AddVMOption     -Xsinglecpu

#
# If true, prevent laucher from handle -help command line argument and
# passes -help to the java application.
#
# Disabled by default
#
AddVMOption    -Dapplication.handle.help=true

#
# This setting must not be changed.
#
SetMainClass oracle.ojc.compiler.Main

#
# If you run into problems related to relocation errors of system dll's, use
# this option to resolve them.  This option only works under ojvm.
#
# AddVMOption -Xheapbase100000000

#
# A list of filenames that are reserved
#
AddVMOption -Dreserved_filenames=con,aux,prn,lpt1,lpt2,lpt3,lpt4,lpt5,lpt6,lpt7,lpt8,lpt9,com1,com2,com3,com4,com5,com6,com7,com8,com9,conin$,conout$

#
# Specify the set of extant translations for resources loaded via
# BundleLoader. The format is a comma separated list of locales, for
# example ja,fr_CA. A translation will only be found if included in
# the list.
#
# Comment out the option to force BundleLoader to use the default
# locale. This is different to giving the property no value,
# meaning there are no translations.
#
# Note that this has no impact on ResourceBundle, which will continue
# to try to load locale specific resources even if they are certain not
# to exist.
#
AddVMOption -Doracle.translated.locales=ja

