##############################################################################
#
# Oracle JDeveloper 10g Launcher Configuration File
# Copyright 2000-2005 Oracle Corporation.
# All Rights Reserved.
#
##############################################################################
#
# The format of this file is:
#
#    "Directive      Value" (with one or more spaces and/or tab characters
#    between the directive and the value)  This file can be in either UNIX
#    or DOS format for end of line terminators.  Any path seperators must be
#    UNIX style forward slashes '/', even on Windows.
#

SetBuiltRoot ../../built
AddJavaLibPath ../lib/patches
AddJavaLibFile ../../../classes
AddJavaLibFile ../../ide/lib/javax-ide.jar
AddJavaLibFile ../../ide/lib/javatools.jar
AddJavaLibFile ../../ide/lib/ide.jar
AddJavaLibFile ../../jlib/jewt4.jar
AddJavaLibFile ../../jlib/share.jar
AddJavaLibFile ../../jlib/help4.jar
AddJavaLibFile ../../jlib/inspect4.jar
AddJavaLibFile ../../lib/xmlparserv2.jar
# Required by XML parser. See bug 4469399
AddJavaLibFile ../../jdbc/lib/orai18n.jar

AddJavaLibFile ../lib/jdev-ep.jar

SetUpdateMainClass oracle.ideimpl.webupdate.DeferredUpdater
SetUpdateClassPath ../../../classes:../../ide/lib/ide-cfu.jar:../../ide/lib/ide.jar:../../ide/lib/javatools-cfu.jar:../../ide/lib/javatools.jar:../../jlib/jewt4.jar:../../jlib/share.jar:../../lib/xmlparserv2.jar

#:../../lib/jaxb-api.jar:../../lib/jaxb-impl.jar:./../lib/jsr173_1.0_api.jar

#
# The extension ID of the extension that has the <product-hook>
# with the IDE product's branding information.
#
AddVMOption -Dide.product=oracle.jdeveloper

#
# The image file for the splash screen.
#
AddVMOption -Dide.splash.screen=splash.gif

#
# Extensions in jdev/lib/ext may require native libraries
#
AddNativeCodePath ../lib/ext

#
# Oracle10g Lite Settings
# Enable these lines (and modify the directories)
# to suit your Oracle Lite installation 
#
# AddNativeCodePath C:/Oracle/lite5/mobile/sdk/bin
# AddJavaLibFile    C:/Oracle/Lite5/mobile/classes/olite40.jar

#
# Directive SetJavaHome is not required by default, except for the base
# install, since the launcher will determine the JAVA_HOME.  On Windows
# it looks in ..\..\jdk, on UNIX it looks in the PATH by default.
#
SetJavaHome D:\Java\jdk1.6.0_27

#
# The Windows launcher will attempt to use client (hotspot) by default,
# unless a VM is specified below with the following directive.  On UNIX
# we use whatever is listed first in the $(JAVA_HOME)/jre/lib/jvm.cfg file.
#
SetJavaVM hotspot

#
# This will enable a "virtual" file system feature within JDeveloper.
# This can help performance for projects with a lot of files,
# particularly under source control.  For non-Windows platforms however,
# any file changes made outside of JDeveloper, or by deployment for
# example, may not be picked by the "virtual" file system feature.  Do
# not enable this for example, on a Linux OS if you use an external editor.
#
# AddVMOption   -DVFS_ENABLE=true

#
# Turn off verifications since the included classes are already verified by the 
# compiler.  This will reduce startup time significantly.  On some Linux 
# Systems, using -Xverify:none will cause a SIGABRT, if you get this, try 
# removing this option.
#
AddVMOption     -Xverify:none

#
# Set the maximum heap to 512M
#
AddVMOption     -Xmx768M

#
# MaxPermSize is required to run JDeveloper with Sun Microsystems virtual
# machine (-client and -server).  The default value is 64M, which isn't enough
# to run JDeveloper successfully.  With the default value, JDeveloper will
# end up running out of memory at some point in time.   This option is ignored
# by OJVM (-ojvm).
# This option is documented at:
# http://java.sun.com/docs/hotspot/gc5.0/gc_tuning_5.html
#
AddVMOption    -XX:MaxPermSize=256M

#
# JavaThread options are required to run JDeveloper with Sun Microsystems virtual
# machine (-client and -server) because of a bug that was causing the VM to run
# full GCs with realtime thread priorities.   The bug is fixed in J2SE 1.5.0_06.
# See: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5101898 for more info.
#
AddVMOption    -XX:JavaPriority10_To_OSPriority=10
AddVMOption    -XX:JavaPriority9_To_OSPriority=9

# These options are designed to optimize the pause time for the hotspot VM
# These options are ignored by ojvm with an information message.
#
AddVMOption    -XX:+UseConcMarkSweepGC 
AddVMOption    -XX:+UseParNewGC
AddVMOption    -XX:+CMSIncrementalMode
AddVMOption    -XX:+CMSIncrementalPacing
AddVMOption    -XX:CMSIncrementalDutyCycleMin=0
AddVMOption    -XX:CMSIncrementalDutyCycle=10

#
# Option used by OJVM client on Windows, This option will turn on line numbers
# in the stack traces by disabling the optimizing compiler.
#
# AddVMOption     -XOd

#
# Enabling this option will cause OJVM client on Windows to only use 1 CPU on 
# a multi-processor system, on single-cpu systems, this option has no effect.
#
# AddVMOption     -Xsinglecpu
#

# This option isn't really documented but
# it's really cool!
# Use this to prevent Windows from paging JDev's memory
# when you minimize it.
# This option should have the same effect as
# the KeepResident plug-in with the advantage
# of being a built-in feature in Sun's JVM 5.
#
AddVMOption -Dsun.awt.keepWorkingSetOnMinimize=true

#
# Disable Direct Draw, on some Windows 2000/XP base computers,
# Direct Draw is cause excessive screen refreshes and slows down drawing.
#
# AddVMOption    -Dsun.java2d.noddraw=true

#
# If true, prevent laucher from handle -help command line argument and
# passes -help to the java application.
#
# Disabled by default
#
# AddVMOption    -Dapplication.handle.help=true

#
# If set to true, prevent laucher from checking/setting the shell
# integration mechanism.
#
# The shell integration feature is enabled by default
#
# AddVMOption    -Dno.shell.integration=true

#
# Disable the forced GC for the ICE browser.
#
AddVMOption     -Dice.browser.forcegc=false

#
# Reduce the tile threshold for the ICE browser.
#
AddVMOption     -Dice.pilots.html4.tileOptThreshold=0

#
# Prepend patches to the bootclasspath.  Currently, rtpatch.jar contains a 
# patch that fixes the javax.swing.JTree accessibility problems. 
# Uncomment the line below if you need to run JDeveloper under JAWS.
#
# AddVMOption     -Xbootclasspath/p:../../jdk/jre/lib/patches/rtpatch.jar

#
# Replace heavyweight AWT controls with lightweight implementations.
#
AddVMOption     -Xbootclasspath/p:../lib/lwawt.jar

#
# This setting must not be changed.
#
SetMainClass oracle.ideimpl.Main

#
# SetUserHomeVariable is used to define an environment variable
# that overrides the default user home location.  The directory
# pointed to by the environment variable defined here will be
# used to store user settings and the "mywork" directory.
# On UNIX platforms the default setting is $HOME/jdevhome
#
SetUserHomeVariable JDEV_USER_DIR

#
# If you run into problems related to relocation errors of system dll's, use
# this option to resolve them.  This option only works under ojvm.
#
# AddVMOption -Xheapbase100000000

#
# A list of filenames that are reserved
#
AddVMOption -Dreserved_filenames=con,aux,prn,lpt1,lpt2,lpt3,lpt4,lpt5,lpt6,lpt7,lpt8,lpt9,com1,com2,com3,com4,com5,com6,com7,com8,com9,conin$,conout$

# Indicates which version of the jdk to use for editor syntax
# highlighting and code explorer. Valid values are: "1.3", "1.4", "1.5".
AddVMOption -DEDITOR_J2SE_VERSION=1.5

#
# Whether Code Insight will omit types and members that have been
# denoted with the @hidden tag.
#
AddVMOption -DINSIGHT_OMIT_HIDDEN=true

#
# Text buffer deadlock detection setting (OFF by default.)  Uncomment
# out the following option if encountering deadlocks that you suspect
# buffer deadlocks that may be due to locks not being released properly.
#
# AddVMOption   -Dbuffer.deadlock.detection=true

# 
# If you use JDeveloper in a multibyte environment the embedded browser
# may display all multibyte characters as squares.  If this happens you
# can use the following option to avoid the problem.
# AddVMOption -Dice.pilots.html4.ignoreNonGenericFonts=true 

#
# Put the xml parser into 9.0.4 compatability mode (3116160)
#
AddVMOption -Doracle.xdkjava.compatibility.version=9.0.4

#
# Specify the set of extant translations for resources loaded via
# BundleLoader. The format is a comma separated list of locales, for
# example ja,fr_CA. A translation will only be found if included in
# the list.
#
# Comment out the option to force BundleLoader to use the default
# locale. This is different to giving the property no value,
# meaning there are no translations.
#
# Note that this has no impact on ResourceBundle, which will continue
# to try to load locale specific resources even if they are certain not
# to exist.
#
AddVMOption -Doracle.translated.locales=ja

#
# Specify the set of locales under which the Windows MS Shell Dlg 2
# (usually Tahoma) can be used in the UI.  The format is a comma separated
# list of two-letter language codes, for example en,fr.
#
# Comment out the option to force the default setting of English only.
# This is different to giving the property no value, meaning the shell font
# is never to be used.  Generally, it is safe to use the shell font only
# with single-byte character sets.
#
# This setting is used only when running under JDK 5.0.
#
AddVMOption -Dwindows.shell.font.languages=en

#
# Temporary internal flag to enable trace messages for the IDE
# controller stack.
#
AddVMOption -Dide.debug.controller.stack=false


#
# If you need to connect to OC4J 10.1.2 from JDeveloper, uncomment the
# following option. Note, however, that enabling this option will prevent
# JDeveloper from connecting to OC4J 10.1.3.
#
# AddVMOption -Drmi.disablePropagation=true


#
# This option controls the parser delay (i.e., for Java error underlining)
# for "small" Java files (<20k).  The delay is in milliseconds.  Files 
# between the "small" (<20k) and "large" (>100k) range will scale the
# parser delay accordingly between the two delay numbers.
#
# The minimum value of this delay is 100 (ms), the default is 300 (ms).
#
AddVMOption -Dceditor.java.parse.small=300

#
# This option controls the parser delay (i.e., for Java error underlining)
# for "large" Java files (>100k).  The delay is in milliseconds.
#
# The minimum value for this delay is 500 (ms), the default is 1500 (ms).
#
AddVMOption -Dceditor.java.parse.large=1500


#
# This option controls whether the extension manager complains about 
# missing extension classpath entries in the Extensions log on startup.
# It is currently switched off intentionally until all existing manifests
# throwing this error have been fixed. This will be removed before
# production.
#
AddVMOption -Dide.extension.cpmissing.nowarn=true

#
# This option is to pass additional vm arguments to the out-of-process
# java compiler used to build the project(s).  The arguments
# are used for both Ojc & Javac.
#
AddVMOption -Dcompiler.vmargs=-mx512m

#
# secure socket (https) connections require native libraries
#
AddNativeCodePath ../../lib

#
# property to allow uddi browser queries to route through password protected
# proxy servers
#
AddVMOption   -Doracle.soap.transport.noHTTPClient=true

#
# Disable tracing for BC4J 
# Suppress BC4J debug warning banner
#
AddVMOption -Djbo.debugoutput=silent
AddVMOption -Djbo.showdebugwarningbanner=false
